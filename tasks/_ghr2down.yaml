---
- name: Include settings temporary name for download
  ansible.builtin.include_tasks: _down_name.yaml

- name: Get releases list
  become: false
  ansible.builtin.uri:
    url: >-
      https://api.github.com/repos/{{
        i.gh_owner
      }}/{{
        i.gh_repo
      }}/releases/tags/{{
        i.gh_tag
      }}
    headers:
      Authorization: "token {{ i.gh_token }}"
    return_content: true
  register: _release_info
  until: _release_info is succeeded
  retries: 5
  delay: 1
  delegate_to: localhost # DevSkim: ignore DS162092
  check_mode: false

- name: Download github release to local
  become: false
  ansible.builtin.get_url:
    attributes: "{{ i.attributes | default(omit) }}"
    client_cert: "{{ i.client_cert | default(omit) }}"
    client_key: "{{ i.client_key | default(omit) }}"
    mode: "{{ i.down_mode | default('0644') }}"
    owner: "{{ i.down_owner | default(omit) }}"
    group: "{{ i.down_owner | default(omit) }}"
    timeout: "{{ i.timeout | default(omit) }}"
    dest: "{{ _meva_down_name }}"
    headers:
      Accept: "application/octet-stream"
      Authorization: "token {{ i.gh_token }}"
    url: >-
      https://api.github.com/repos/{{
        i.gh_owner
      }}/{{
        i.gh_repo
      }}/releases/assets/{{
        j.id
      }}
    unredirected_headers: "{{ i.unredirected_headers | default(omit) }}"
    force: "{{ i.force | default(omit) }}"
    backup: "{{ i.backup | default(omit) }}"
    checksum: "{{ i.checksum | default(omit) }}"
    ciphers: "{{ i.ciphers | default(omit) }}"
    http_agent: "{{ i.http_agent | default(omit) }}"
    selevel: "{{ i.selevel | default(omit) }}"
    serole: "{{ i.serole | default(omit) }}"
    setype: "{{ i.setype | default(omit) }}"
    seuser: "{{ i.seuser | default(omit) }}"
    tmp_dest: "{{ i.tmp_dest | default(omit) }}"
    unsafe_writes: "{{ i.unsafe_writes | default(omit) }}"
    use_gssapi: "{{ i.use_gssapi | default(omit) }}"
    use_netrc: "{{ i.use_netrc | default(omit) }}"
    use_proxy: "{{ i.use_proxy | default(omit) }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: "{{ i.delegate_to | default(omit) }}"
  check_mode: false
  notify: "{{ i.notify | default(omit) }}"
  loop_control:
    loop_var: j
  loop: "{{ _release_info.json.assets }}"
  when: "i.substring in j.name"

- name: Unpack downloaded archive and propagate files
  ansible.builtin.include_tasks: _unp4pro.yaml
  when: "'delegate_to' in i"

- name: Unpack downloaded archive to destination
  ansible.builtin.include_tasks: _unp2loc.yaml
  when: "'delegate_to' not in i"
