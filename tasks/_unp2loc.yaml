---
- name: Unpack from archive
  ansible.builtin.unarchive:
    src: "{{ _meva_down_name }}"
    dest: "{{ i.dest }}"
    owner: "{{ i.owner | default(omit) }}"
    group: "{{ i.group | default(omit) }}"
    creates: "{{ i.dest }}/{{ i.creates }}"
    remote_src: true
  register: unarchive_result
  ignore_errors: true
  when:
    - i.archive
    - i.creates | dirname != ''

- name: Decompress block if unarchive failed
  when:
    - i.archive
    - not ansible_check_mode
    - unarchive_result.failed | default(true)
  block:
    - name: Unarchive failed, trying to decompress
      decompress:
        src: "{{ _meva_down_name }}"
        dst: "{{ i.dest }}/{{ i.creates }}"
      notify: "{{ i.notify | default(omit) }}"
    - name: Set owner, group and mode after decompress
      ansible.builtin.file:
        path: "{{ i.dest }}/{{ i.creates }}"
        mode: "{{ i.file_mode | default(omit) }}"
        owner: "{{ i.owner | default(omit) }}"
        group: "{{ i.group | default(omit) }}"
        access_time: "{{ i.access_time | default(omit) }}"
        access_time_format: "{{ i.access_time_format | default(omit) }}"
        modification_time: "{{ i.modification_time | default(omit) }}"
        modification_time_format: "{{ i.modification_time_format | default(omit) }}"
      notify: "{{ i.notify | default(omit) }}"

- name: Apply filesystem modes
  when:
    - i.archive
    - not unarchive_result.failed | default(true)
    - unarchive_result.changed | default(false)
  block:
    - name: Apply mode to directories
      # noqa no-changed-when risky-shell-pipe
      ansible.builtin.shell: >-
        /usr/bin/env find '{{ i.dest }}' -type d |
        /usr/bin/env sed 's/.*/"&"/g' | /usr/bin/env xargs -r
        /usr/bin/env chmod {{ i.dir_mode | default('0755') }}
    - name: Apply mode to executable files
      # noqa no-changed-when risky-shell-pipe
      ansible.builtin.shell: >-
        /usr/bin/env find '{{ i.dest }}' -type f -executable |
        /usr/bin/env sed 's/.*/"&"/g' | /usr/bin/env xargs -r
        /usr/bin/env chmod {{ i.exec_mode | default('0755') }}
    - name: Apply mode to non-executable files
      # noqa no-changed-when risky-shell-pipe
      ansible.builtin.shell: >-
        /usr/bin/env find '{{ i.dest }}' -type f ! -executable |
        /usr/bin/env sed 's/.*/"&"/g' | /usr/bin/env xargs -r
        /usr/bin/env chmod {{ i.file_mode | default('0644') }}

- name: Copy and set attrs
  when: not i.archive and 'dest' in i
  block:
    - name: Copy downloaded file to destination if not archive
      ansible.builtin.copy:
        src: "{{ _meva_down_name }}"
        dest: "{{ i.dest | default(mandatory) }}"
        force: "{{ i.force | default(omit) }}"
        follow: "{{ i.follow | default(omit) }}"
        owner: "{{ i.owner | default(i.down_owner | default(omit)) }}"
        group: "{{ i.group | default(i.down_owner | default(omit)) }}"
        mode: "{{ i.file_mode | default(i.down_mode | default(omit)) }}"
        remote_src: true
      notify: "{{ i.notify | default(omit) }}"
      register: copy_result
    - name: Set owner, group and mode after download
      ansible.builtin.file:
        path: "{{ i.dest | default(mandatory) }}"
        mode: "{{ i.file_mode | default(omit) }}"
        owner: "{{ i.owner | default(omit) }}"
        group: "{{ i.group | default(omit) }}"
        access_time: "{{ i.access_time | default(omit) }}"
        access_time_format: "{{ i.access_time_format | default(omit) }}"
        modification_time: "{{ i.modification_time | default(omit) }}"
        modification_time_format: "{{ i.modification_time_format | default(omit) }}"
      notify: "{{ i.notify | default(omit) }}"
      when: "'size' in copy_result"
